apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8
version = '1.0'
group = 'org.rnorth.circuitbreakers'

repositories {
    mavenCentral()
}

configurations {
    asciidoclet
}

dependencies {
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
    asciidoclet 'org.asciidoctor:asciidoclet:1.+'
    compile 'org.slf4j:slf4j-api:1.7.7'
    testCompile 'org.slf4j:slf4j-simple:1.7.7'
}

javadoc {
    options.docletpath = configurations.asciidoclet.files.asType(List)
    options.doclet = 'org.asciidoctor.Asciidoclet'
    options.overview = "src/main/java/overview.adoc"
    options.addStringOption "-base-dir", "${projectDir}"
    options.addStringOption "-attribute",
            "projectDir=${projectDir}," +
            "name=${project.name}," +
            "version=${project.version}," +
            "title-link=http://example.com[${project.name} ${project.version}]"
}

apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'org.asciidoctor.convert'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = project.hasProperty('bintray_user') ? project.bintray_user : ''
    key = project.hasProperty('bintray_api_key') ? project.bintray_api_key : ''
    publications = ['mavenJava']

    pkg {
        repo = 'maven'
        name = 'circuitbreakers'
        desc = 'Circuit Breakers pattern implementation for Java 8'
        websiteUrl = 'https://github.com/rnorth/circuitbreakers'
        issueTrackerUrl = 'https://github.com/rnorth/circuitbreakers/issues'
        vcsUrl = 'https://github.com/rnorth/circuitbreakers.git'
        licenses = ['MIT']
    }
}

asciidoctor {
    sourceDir projectDir
    sources {
        include '**/*.adoc'
    }
    outputDir new File("${projectDir}/docs")
}
tasks.asciidoctor.dependsOn(javadoc)